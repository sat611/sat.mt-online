app.use(express.static('public'));
// server.js //save_data
const express = require('express');
const mysql = require('mysql2');
const cors = require('cors');

const app = express();
app.use(cors());
app.use(express.json());

// ЁЯФМ MySQL Connection
const db = mysql.createConnection({
  host: 'localhost',
  user: 'root',
  password: '',
  database: 'repair_db'
});

// ЁЯФз р╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕гр╕▓р╕вр╕Бр╕▓р╕гр╣Бр╕Ир╣Йр╕Зр╕Лр╣Ир╕нр╕б
app.get('/repairs', (req, res) => {
  db.query('SELECT * FROM repairs', (err, results) => {
    if (err) {
      console.error(err);
      return res.status(500).send('Database error');
    }
    res.json(results);
  });
});





//home

const express = require('express');
const mysql = require('mysql2');
const cors = require('cors');
const app = express();

app.use(cors());
app.use(express.static('public')); // р╕кр╕│р╕лр╕гр╕▒р╕Ър╣Ар╕кр╕┤р╕гр╣Мр╕Яр╣Др╕Яр╕ер╣М HTML р╕Цр╣Йр╕▓р╕бр╕╡

// тЬЕ р╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕нр╕Рр╕▓р╕Щр╕Вр╣Йр╕нр╕бр╕╣р╕е
const db = mysql.createConnection({
  host: 'localhost',
  user: 'root',
  password: '',
  database: 'repair_db'
});

// ЁЯФз API р╣Бр╕кр╕Фр╕Зр╕гр╕▓р╕вр╕Бр╕▓р╕гр╣Бр╕Ир╣Йр╕Зр╕Лр╣Ир╕нр╕бр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф
app.get('/repairs', (req, res) => {
  const sql = 'SELECT * FROM repairs ORDER BY id DESC';

  db.query(sql, (err, results) => {
    if (err) {
      console.error('тЭМ р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╣Гр╕Щр╕Бр╕▓р╕гр╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕н:', err);
      return res.status(500).send('Database error');
    }

    // ЁЯФД р╣Бр╕Ыр╕ер╕Зр╣Ар╕Ыр╣Зр╕Щ HTML (р╕Цр╣Йр╕▓р╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╣Бр╕Ър╕Ъ PHP р╣Ар╕Фр╕┤р╕б)
    if (results.length > 0) {
      const html = results.map(row => `
        ЁЯУЖ р╕зр╕▒р╕Щр╕Чр╕╡р╣И: ${row.date}
        | ЁЯХР р╣Ар╕зр╕ер╕▓: ${row.time}
        | ЁЯПн р╣Др╕ер╕Щр╣М: ${row.line}
        | ЁЯзй р╣Бр╕Ьр╕Щр╕Б: ${row.section}
        | ЁЯФз р╣Ар╕Др╕гр╕╖р╣Ир╕нр╕Зр╕Ир╕▒р╕Бр╕г: ${row.Machine_name}
        | р╕гр╕лр╕▒р╕к: ${row.Machine_Code}<br><hr>
      `).join('');
      res.send(`<h2>ЁЯУЛ р╕гр╕▓р╕вр╕Бр╕▓р╕гр╣Бр╕Ир╣Йр╕Зр╕Лр╣Ир╕нр╕бр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф</h2>${html}`);
    } else {
      res.send('р╕вр╕▒р╕Зр╣Др╕бр╣Ир╕бр╕╡р╕гр╕▓р╕вр╕Бр╕▓р╕гр╣Бр╕Ир╣Йр╕Зр╕Лр╣Ир╕нр╕б');
    }
  });
});

// тЬЕ р╣Ар╕гр╕┤р╣Ир╕бр╣Ар╕Лр╕┤р╕гр╣Мр╕Яр╣Ар╕зр╕нр╕гр╣М
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`ЁЯЪА Server ready: http://localhost:${PORT}`);
});


//р╕Ър╕▒р╕Щр╕Чр╕╢р╕Бр╣Гр╕Ър╣Бр╕Ир╣Йр╕Зр╕Лр╣Ир╕нр╕б
const express = require('express');
const mysql = require('mysql2');
const bodyParser = require('body-parser');
const path = require('path');

const app = express();
const port = 3000;

// Middleware
app.use(bodyParser.urlencoded({ extended: true }));
app.use(bodyParser.json());
app.use(express.static('public')); // р╣Др╕Яр╕ер╣М static р╣Ар╕Кр╣Ир╕Щ home.html р╕Хр╣Йр╕нр╕Зр╕нр╕вр╕╣р╣Ир╣Гр╕Щр╣Вр╕Яр╕ер╣Ар╕Фр╕нр╕гр╣М public

// р╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕нр╕Рр╕▓р╕Щр╕Вр╣Йр╕нр╕бр╕╣р╕е
const connection = mysql.createConnection({
  host: 'localhost',
  user: 'root',
  password: '',
  database: 'repair_db'
});

connection.connect((err) => {
  if (err) {
    console.error('тЭМ Database connection failed:', err);
    return;
  }
  console.log('тЬЕ Connected to MySQL');
});

// Route р╕кр╕│р╕лр╕гр╕▒р╕Ър╕гр╕▒р╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Яр╕нр╕гр╣Мр╕бр╣Бр╕ер╕░р╕Ър╕▒р╕Щр╕Чр╕╢р╕Бр╕ер╕Зр╕Рр╕▓р╕Щр╕Вр╣Йр╕нр╕бр╕╣р╕е
app.post('/save-report', (req, res) => {
  const { machine, location, problem, reporter } = req.body;

  const sql = `INSERT INTO repairs (machine_name, location, problem, reporter)
               VALUES (?, ?, ?, ?)`;
  connection.execute(sql, [machine, location, problem, reporter], (err, results) => {
    if (err) {
      console.error('тЭМ Failed to insert data:', err);
      res.status(500).send('Error saving report');
      return;
    }

    // тЬЕ Redirect р╕Бр╕ер╕▒р╕Ър╣Др╕Ыр╕лр╕Щр╣Йр╕▓ home.html
    res.redirect('/home.html');
  });
});

// р╣Ар╕гр╕┤р╣Ир╕бр╣Ар╕Лр╕┤р╕гр╣Мр╕Яр╣Ар╕зр╕нр╕гр╣М
app.listen(port, () => {
  console.log(`ЁЯЪА Server running at http://localhost:${port}`);
});


//update status
app.get('/update-status', (req, res) => {
  const id = parseInt(req.query.id);
  const to = req.query.to;

  const allowed = ['pending', 'in_progress', 'completed'];
  if (!allowed.includes(to)) {
    return res.status(400).send("Invalid status.");
  }

  const sql = `UPDATE repairs SET status = ? WHERE id = ?`;
  db.execute(sql, [to, id], (err, result) => {
    if (err) {
      console.error('тЭМ Error updating status:', err);
      return res.status(500).send("Failed to update status.");
    }

    res.redirect('/home.html'); // р╕Бр╕ер╕▒р╕Ър╣Др╕Ыр╕лр╕Щр╣Йр╕▓р╣Бр╕гр╕Б
  });
});













?>
